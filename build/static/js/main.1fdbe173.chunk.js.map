{"version":3,"sources":["components/StatesData/index.js","components/Footer/index.js","components/NotFound/index.js","components/SearchStateResults/index.js","components/Home/index.js","components/FaqItems/index.js","components/About/index.js","components/Header/index.js","components/Vaccination/index.js","components/CasesStatus/index.js","components/TimeLineData/index.js","components/SearchCovidCasesByIndividualStates/index.js","App.js","index.js"],"names":["StatesData","props","eachState","stateName","confirmed","active","recovered","deceased","population","className","Footer","NotFound","src","alt","to","type","SearchStateResults","eachSearch","stateCode","statesList","state_code","state_name","state_image_url","changeStateKeysData","map","stateImageUrl","apiStatusKeys","Home","state","stateValue","totalStatusList","apiStatus","whenUserSearchState","event","setState","target","value","whenUserPressAscBtn","reverse","whenUserPressDesBtn","searchStateWiseCovidCasesApiCall","a","fetch","response","ok","json","data","convertObjectsDataIntoListItemsUsingForInMethod","resultList","Object","keys","forEach","keyName","total","tested","meta","stateFullName","find","states","push","renderFailureView","renderHomeCovidPage","stateWiseCovidSortOptionBased","searchSelectCon","filter","eachList","toUpperCase","includes","console","log","confirmedStatsAllIndia","activeStatusInIndia","recoveredStatusInIndia","deceasedStatusInIndia","length","everyDetail","reduce","each","currentValue","options","onChange","placeholder","testId","testid","onClick","renderLoaderView","color","height","width","this","renderFailureCase","Component","FaqItems","eachFaq","answer","question","faqApiStatusKeys","About","faqList","faqApiStatus","renderAboutApiCall","faq","renderFaqLoaderView","renderFaqFailureCase","renderFaqSuccessView","qno","Header","navMenuBtn","themeButton","userPressMenuButton","userPressCloseIcon","userPressLightThemeIcon","userPressDarkThemeIcon","whenThemeActivatedFunction","navThemeCssApply","headCssApply","homeRouteCssApply","aboutRouteCssApply","closeIconCssApply","menuIconCssApply","vaccinationRouteCssApply","Vaccination","stateNamesList","selectedState","districtNamesList","selectedDistrict","vaccinationDetailsList","activeValue","userSearchBasedDoses","userSearchBasedAge","whenUserSelectState","getVaccinationDistrictWiseNamesApiCall","whenUserSelectDistrict","getVaccinationStateWiseNamesApiCall","stateNamesKeysChange","stateId","state_id","parsedState","parseInt","districtNamesKeysChange","districts","eachDistrict","districtId","district_id","districtName","district_name","getVaccinationAllDetailsApiCall","vaccinationDosesAsPerAgeBasedObj","timeWiseTodayRegReport","eachDose","age18","age45","age60","label","substring","vaccinationKeysInfo","topBlock","sites","vaccinationGenderObject","male","vaccination","female","others","vaccinationVaccineObject","covaxin","covishield","sputnik","totalDosesObj","dose1","tot_dose_1","dose2","tot_dose_2","totalDoses","total_doses","vaccinationDoneByAge","vaccinationByAge","above_60","vac_18_45","vac_45_60","vaccinationDoneByTime","eachTime","count","timeDose1","dose_one","timeDose2","dose_two","prevState","renderVaccinationFailureView","renderVaccinationLoaderView","renderVaccinationDetails","activeDosesButtonClass","activeAgedButtonClass","vaccinationSitesDetailsNotEmpty","vaccinationDosesDetailsNotEmpty","vaccinationDosesAsPerAge","vaccinationDetailsAsPerAge","VaccinationLineData","VaccinationDosesData","vaccinationAgeDosesData","dataFormatter","number","toString","keyNames","genderChartList","gender","keyNamesVaccineType","vaccineTypeChartList","vaccineType","keyNamesAgedBased","vaccineAgedBasedChartList","vaccineAgeCategory","govt","pvt","stateHead","hidden","AreaChart","margin","top","right","left","bottom","XAxis","dataKey","YAxis","tickFormatter","Tooltip","Legend","Area","stroke","activeDot","r","fill","ResponsiveContainer","PieChart","Pie","startAngle","endAngle","innerRadius","outerRadius","Cell","name","iconType","layout","verticalAlign","align","CasesStatus","confirmedStats","recoveredStats","activeStats","deceasedStats","whenUserClickConfirmedCases","whenUserClickActiveCases","whenUserClickRecoveredCases","whenUserClickDeceasedCases","activeStatus","confirmedClass","activeClass","recoveredClass","deceasedClass","activeCategory","TimeLineData","timeLineData","spreadTimeLinesApiCall","stateNameCode","timelineResponse","timelineData","convertAllDatesDataINtoArray","dates","confirmedSpreadList","deceasedSpreadList","recoveredSpreadList","testedSpreadList","activeSpreadList","totalPositiveList","totalActive","totalPositive","mainDate","confirmedDate","Confirmed","deceasedDate","Deceased","recoveredDate","Recovered","testedDate","Tested","activeDate","TotalActive","positiveDate","renderSpreadTrends","renderConfirmedLineChart","LineChart","Line","renderActiveLineChart","renderRecoveredLineChart","renderDeceasedLineChart","renderTestedLineChart","slicingItemsFunction","indexItem","firstTimeSlice","secondEndSlice","slice","renderConfirmedBarChart","BarChart","Bar","position","renderActiveBarChart","renderRecoveredBarChart","renderDeceasedBarChart","covidCasesCategoryTypeBarCharts","activeType","renderTimeLineBarAndLineCharts","whenUserPressDailyButton","SearchCovidCasesByIndividualStates","districtsObj","metaObj","totalCasesObj","userSearchStateWiseData","match","params","stateInformation","convertDistrictsDataIntoListItemsUsingForInMethod","totalCasesItems","metaInfoItems","date","lastUpdated","last_updated","vaccinatedDate","vaccinated","stateNameFinal","renderConfirmedCases","sort","b","renderActiveCases","renderRecoveredCases","renderDeceasedCases","renderDistrictCasesOnSelectionBasis","renderStatesCovidInformation","stateMapUrl","eachImage","fullDate","Date","testedLastDate","getDate","testedLastMonth","getMonth","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fdbe173.chunk.js","sourcesContent":["import './index.css'\n\nconst StatesData = props => {\n  const {eachState} = props\n  const {\n    stateName,\n    confirmed,\n    active,\n    recovered,\n    deceased,\n    population,\n  } = eachState\n  return (\n    <li className=\"stateWise_row_list_card\">\n      <p className=\"stateWise_row_stateName_data\">{stateName}</p>\n      <p className=\"stateWise_row_confirmed_data\">{confirmed}</p>\n      <p className=\"stateWise_row_active_data\">{active}</p>\n      <p className=\"stateWise_row_recover_data\">{recovered}</p>\n      <p className=\"stateWise_row_deceased_data\">{deceased}</p>\n      <p className=\"stateWise_row_population_data\">{population}</p>\n    </li>\n  )\n}\n\nexport default StatesData\n","import {FaTwitter} from 'react-icons/fa'\n\nimport {VscGithubAlt} from 'react-icons/vsc'\n\nimport {FiInstagram} from 'react-icons/fi'\n\nimport './index.css'\n\nexport default function Footer() {\n  return (\n    <div className=\"footer_page\">\n      <h1 className=\"footer_covid_head_style\">COVID19INDIA</h1>\n      <p className=\"footer_para_style\">\n        We stand with everyone fighting on the front lines\n      </p>\n      <div className=\"footer_icons_card\">\n        <VscGithubAlt className=\"github_icon_style\" />\n        <FiInstagram className=\"instagram_icon_style\" />\n        <FaTwitter className=\"twitter_icon_style\" />\n      </div>\n    </div>\n  )\n}\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst NotFound = () => (\n  <div className=\"pageNotFound_page\">\n    <img\n      src=\"https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638334657/Group_7484pagenotfound_n9aal4.png\"\n      alt=\"not-found-pic\"\n      className=\"notFound_img\"\n    />\n    <h1 className=\"page_head\">PAGE NOT FOUND</h1>\n    <p className=\"sorry_para\">\n      we are sorry, the page you requested could not be found\n    </p>\n    <Link to=\"/\" className=\"home_link_style\">\n      <button className=\"home_btn_style\" type=\"button\">\n        Home\n      </button>\n    </Link>\n  </div>\n)\n\nexport default NotFound\n","import {Link} from 'react-router-dom'\n\nimport {BiChevronRightSquare} from 'react-icons/bi'\n\nimport './index.css'\n\nconst SearchStateResults = props => {\n  const {eachSearch} = props\n  const {stateCode, stateName} = eachSearch\n  return (\n    <Link to={`state/${stateCode}`} className=\"covid_state_table_link_style\">\n      <li className=\"states_list_card\">\n        <p className=\"state_name_para_style\">{stateName}</p>\n        <div className=\"stateCode_icon_card\">\n          <p className=\"state_code_para_style\">{stateCode}</p>\n          <BiChevronRightSquare className=\"right_square_icon_style\" />\n        </div>\n      </li>\n    </Link>\n  )\n}\n\nexport default SearchStateResults\n","import {Component} from 'react'\n\nimport Loader from 'react-loader-spinner'\nimport {BsSearch} from 'react-icons/bs'\nimport {FcGenericSortingDesc, FcGenericSortingAsc} from 'react-icons/fc'\n\nimport StatesData from '../StatesData/index'\n\nimport Footer from '../Footer'\nimport NotFound from '../NotFound'\n\nimport SearchStateResults from '../SearchStateResults/index'\n\nimport './index.css'\n\nconst statesList = [\n  {\n    state_code: 'AN',\n    state_name: 'Andaman and Nicobar Islands',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638942497/Group_7362andaman_b4edxe.png',\n  },\n  {\n    state_code: 'AP',\n    state_name: 'Andhra Pradesh',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638943186/Group_7354ap_uddgju.png',\n  },\n  {\n    state_code: 'AR',\n    state_name: 'Arunachal Pradesh',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941120/Group_7340arunachal_czgqoh.png',\n  },\n  {\n    state_code: 'AS',\n    state_name: 'Assam',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941172/Group_7341assam_mjtxah.png',\n  },\n  {\n    state_code: 'BR',\n    state_name: 'Bihar',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638940604/Group_7335bihar_tzc2qf.png',\n  },\n  {\n    state_code: 'CH',\n    state_name: 'Chandigarh',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638942352/Group_7361chandigarh_bflc7t.png',\n  },\n  {\n    state_code: 'CT',\n    state_name: 'Chhattisgarh',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941688/Group_7353chattisgarh_ji7sxt.png',\n  },\n  {\n    state_code: 'DN',\n    state_name: 'Dadra and Nagar Haveli and Daman and Diu',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638942579/Group_7357daman_w7orsb.png',\n  },\n  {\n    state_code: 'DL',\n    state_name: 'Delhi',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638942803/Group_7358delhi_ppppzj.png',\n  },\n  {\n    state_code: 'GA',\n    state_name: 'Goa',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941254/Group_7349goa_lrrqj7.png',\n  },\n  {\n    state_code: 'GJ',\n    state_name: 'Gujarat',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638940737/Group_7337gujrat_e5owmt.png',\n  },\n  {\n    state_code: 'HR',\n    state_name: 'Haryana',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638940360/Group_7332haryana_prqwfx.png',\n  },\n  {\n    state_code: 'HP',\n    state_name: 'Himachal Pradesh',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638877757/Group_7364himachal_e1h0ps.png',\n  },\n  {\n    state_code: 'JK',\n    state_name: 'Jammu and Kashmir',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638877646/Group_7328jammu_dhfdjr.png',\n  },\n  {\n    state_code: 'JH',\n    state_name: 'Jharkhand',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638940835/Group_7342jarkhand_movqha.png',\n  },\n  {\n    state_code: 'KA',\n    state_name: 'Karnataka',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941991/Group_7339karnataka_sbaj00.png',\n  },\n  {\n    state_code: 'KL',\n    state_name: 'Kerala',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638942069/Group_7355kerala_nvkijt.png',\n  },\n  {\n    state_code: 'LA',\n    state_name: 'Ladakh',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638943063/Group_7363ladakh_upogsc.png',\n  },\n  {\n    state_code: 'LD',\n    state_name: 'Lakshadweep',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638942659/Group_7359lakshadweep_g5jtqk.png',\n  },\n  {\n    state_code: 'MH',\n    state_name: 'Maharashtra',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941836/Group_7350maharastra_ppa2qk.png',\n  },\n  {\n    state_code: 'MP',\n    state_name: 'Madhya Pradesh',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638940667/Group_7336mp_n5ow4p.png',\n  },\n  {\n    state_code: 'MN',\n    state_name: 'Manipur',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941477/Group_7346manipur_l4fcml.png',\n  },\n  {\n    state_code: 'ML',\n    state_name: 'Meghalaya',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941347/Group_7344meghalaya_awtbh1.png',\n  },\n  {\n    state_code: 'MZ',\n    state_name: 'Mizoram',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941545/Group_7347mizoram_wabwun.png',\n  },\n  {\n    state_code: 'NL',\n    state_name: 'Nagaland',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941414/Group_7345nagaland_vnjklu.png',\n  },\n  {\n    state_code: 'OR',\n    state_name: 'Odisha',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941750/Group_7348orissa_sbnbxd.png',\n  },\n  {\n    state_code: 'PY',\n    state_name: 'Puducherry',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638942740/Group_7360puducherry_kiaorv.png',\n  },\n  {\n    state_code: 'PB',\n    state_name: 'Punjab',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638877926/Group_7330punjab_koyhma.png',\n  },\n  {\n    state_code: 'RJ',\n    state_name: 'Rajasthan',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638940440/Group_7333rajastan_evbcps.png',\n  },\n  {\n    state_code: 'SK',\n    state_name: 'Sikkim',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941014/Group_7338sikkim_zciwew.png',\n  },\n  {\n    state_code: 'TN',\n    state_name: 'Tamil Nadu',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638942166/Group_7356tamilanadu_rwh3kv.png',\n  },\n  {\n    state_code: 'TG',\n    state_name: 'Telangana',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941903/Group_7351telangana_tgg3xt.png',\n  },\n  {\n    state_code: 'TR',\n    state_name: 'Tripura',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638941612/Group_7352tripura_jhmfpz.png',\n  },\n  {\n    state_code: 'UP',\n    state_name: 'Uttar Pradesh',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638940526/Group_7334up_y1qewk.png',\n  },\n  {\n    state_code: 'UT',\n    state_name: 'Uttarakhand',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638940270/Group_7331uttarakand_hdxxmu.png',\n  },\n  {\n    state_code: 'WB',\n    state_name: 'West Bengal',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638940920/Group_7343wb_zfmknh.png',\n  },\n  {\n    state_code: 'TT',\n    state_name: 'West Bengal',\n    state_image_url:\n      'https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638940920/Group_7343wb_zfmknh.png',\n  },\n]\n\nexport const changeStateKeysData = statesList.map(eachState => ({\n  stateCode: eachState.state_code,\n  stateName: eachState.state_name,\n  stateImageUrl: eachState.state_image_url,\n}))\n\nconst apiStatusKeys = {\n  inprogress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  initial: 'INITIAL',\n}\n\nclass Home extends Component {\n  state = {\n    stateValue: '',\n    totalStatusList: [],\n    apiStatus: apiStatusKeys.initial,\n  }\n\n  componentDidMount() {\n    this.searchStateWiseCovidCasesApiCall()\n  }\n\n  /* USER SEARCH STATS BASED ON STATES */\n\n  whenUserSearchState = event => {\n    this.setState({stateValue: event.target.value})\n  }\n\n  whenUserPressAscBtn = () => {\n    const {totalStatusList} = this.state\n    if (totalStatusList[0].stateCode === 'AN') {\n      this.setState({totalStatusList})\n    } else {\n      this.setState({totalStatusList: totalStatusList.reverse()})\n    }\n  }\n\n  whenUserPressDesBtn = () => {\n    const {totalStatusList} = this.state\n    if (totalStatusList[0].stateCode !== 'AN') {\n      this.setState({totalStatusList})\n    } else {\n      this.setState({totalStatusList: totalStatusList.reverse()})\n    }\n  }\n\n  /* COVID STATS API DATA CALL */\n\n  searchStateWiseCovidCasesApiCall = async () => {\n    this.setState({apiStatus: apiStatusKeys.inprogress})\n    const response = await fetch('https://apis.ccbp.in/covid19-state-wise-data')\n\n    if (response.ok === true) {\n      const data = await response.json()\n      this.convertObjectsDataIntoListItemsUsingForInMethod(data)\n      this.setState({\n        apiStatus: apiStatusKeys.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusKeys.failure})\n    }\n  }\n\n  convertObjectsDataIntoListItemsUsingForInMethod = data => {\n    const resultList = []\n    const keyNames = Object.keys(data)\n    keyNames.forEach(keyName => {\n      if (data[keyName]) {\n        const {total} = data[keyName]\n        const confirmed = total.confirmed ? total.confirmed : 0\n        const deceased = total.deceased ? total.deceased : 0\n        const recovered = total.recovered ? total.recovered : 0\n        const tested = total.tested ? total.tested : 0\n        const population = data[keyName].meta.population\n          ? data[keyName].meta.population\n          : 0\n        const stateFullName = statesList.find(\n          states => states.state_code === keyName,\n        )\n\n        resultList.push({\n          stateCode: keyName,\n          stateName: stateFullName.state_name,\n          confirmed,\n          deceased,\n          recovered,\n          population,\n          tested,\n          active: confirmed - (deceased + recovered),\n        })\n      }\n    })\n    this.setState({totalStatusList: resultList})\n  }\n\n  renderFailureView = () => <NotFound />\n\n  renderHomeCovidPage = () => {\n    const {stateValue, totalStatusList} = this.state\n\n    const stateWiseCovidSortOptionBased = totalStatusList\n\n    const searchSelectCon = changeStateKeysData.filter(eachList =>\n      eachList.stateName.toUpperCase().includes(stateValue.toUpperCase()),\n    )\n\n    console.log(stateValue)\n    let confirmedStatsAllIndia = 0\n    let activeStatusInIndia = 0\n    let recoveredStatusInIndia = 0\n    let deceasedStatusInIndia = 0\n\n    if (totalStatusList.length >= 1) {\n      /* TO SUM THE TOTAL CONFIRMED CASES */\n      const confirmedStatsArray = totalStatusList.map(\n        everyDetail => everyDetail.confirmed,\n      )\n      confirmedStatsAllIndia = confirmedStatsArray.reduce(\n        (each, currentValue) => each + currentValue,\n      )\n      /* TO SUM THE TOTAL ACTIVE CASES */\n      const activeStatsArray = totalStatusList.map(\n        everyDetail => everyDetail.active,\n      )\n      activeStatusInIndia = activeStatsArray.reduce(\n        (each, currentValue) => each + currentValue,\n      )\n      /* TO SUM THE TOTAL RECOVERED CASES */\n\n      const recoverStatsArray = totalStatusList.map(\n        everyDetail => everyDetail.recovered,\n      )\n      recoveredStatusInIndia = recoverStatsArray.reduce(\n        (each, currentValue) => each + currentValue,\n      )\n      /* TO SUM THE TOTAL DECEASED CASES */\n\n      const deceaseStatsArray = totalStatusList.map(\n        everyDetail => everyDetail.deceased,\n      )\n      deceasedStatusInIndia = deceaseStatsArray.reduce(\n        (each, currentValue) => each + currentValue,\n      )\n      /* TO SUM THE TOTAL POPULATION */\n    }\n\n    return (\n      <>\n        <div className=\"covid_home_route_page\">\n          <div className=\"state_searching_con\">\n            <div className=\"state_search_card\">\n              <BsSearch className=\"search_icon_style\" />\n              <input\n                value={stateValue}\n                type=\"search\"\n                options={statesList}\n                onChange={this.whenUserSearchState}\n                placeholder=\"Enter the State\"\n                className=\"search_input_style\"\n              />\n            </div>\n\n            {stateValue.length >= 1 ? (\n              <ul\n                className=\"state_unlist_con\"\n                testId=\"searchResultsUnorderedList\"\n              >\n                {searchSelectCon.map(eachSearch => (\n                  <SearchStateResults\n                    key={eachSearch.stateCode}\n                    eachSearch={eachSearch}\n                  />\n                ))}\n              </ul>\n            ) : (\n              ''\n            )}\n          </div>\n          <div className=\"confirmed_active_bar_con\">\n            <div className=\"countrywide_covid_home_stats_con\">\n              <div\n                className=\"confirmed_card\"\n                testId=\"countryWideConfirmedCases\"\n              >\n                <p className=\"confirmed_para\">Confirmed</p>\n                <img\n                  src=\"https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638163795/Groupconfirmed_r0ng1r.png\"\n                  alt=\"country wide confirmed cases pic\"\n                  className=\"confirmed_image\"\n                />\n                <p className=\"confirmed_cases_para\">{confirmedStatsAllIndia}</p>\n              </div>\n              <div className=\"active_card\" testId=\"countryWideActiveCases\">\n                <p className=\"active_para\">Active</p>\n                <img\n                  src=\"https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638163837/protection_1active_lz4jqs.png\"\n                  alt=\"country wide active cases pic\"\n                  className=\"active_image\"\n                />\n                <p className=\"active_cases_para\">{activeStatusInIndia}</p>\n              </div>\n\n              <div\n                className=\"recovered_card\"\n                testId=\"countryWideRecoveredCases\"\n              >\n                <p className=\"recover_para\">Recovered</p>\n                <img\n                  src=\"https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638163886/recovered_1recovered_rslph4.png\"\n                  alt=\"country wide recovered cases pic\"\n                  className=\"recover_image\"\n                />\n                <p className=\"recover_cases_para\">{recoveredStatusInIndia}</p>\n              </div>\n\n              <div className=\"deceased_card\" testId=\"countryWideDeceasedCases\">\n                <p className=\"decease_para\">Deceased</p>\n                <img\n                  src=\"https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638163603/breathing_1deceased_i1q80r.png\"\n                  alt=\"country wide deceased cases pic\"\n                  className=\"decease_image\"\n                />\n                <p className=\"decease_cases_para\">{deceasedStatusInIndia}</p>\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"state_covid_information_con\"\n            testId=\"stateWiseCovidDataTable\"\n          >\n            <div className=\"stateWiseTableColumns_con\">\n              <div className=\"stateWise_table_cols_list\">\n                <h1 className=\"stateWise_col_state_head\">States/UT</h1>\n                <div className=\"stateWise_col_icons_card\">\n                  <button\n                    type=\"button\"\n                    testid=\"ascendingSort\"\n                    className=\"ascending_btn_style\"\n                    onClick={this.whenUserPressAscBtn}\n                  >\n                    <FcGenericSortingAsc className=\"icon_style\" />\n                  </button>\n                  <button\n                    type=\"button\"\n                    testid=\"descendingSort\"\n                    className=\"descending_btn_style\"\n                    onClick={this.whenUserPressDesBtn}\n                  >\n                    <FcGenericSortingDesc className=\"icon_style\" />\n                  </button>\n                </div>\n                <p className=\"stateWise_col_confirmed_head\">Confirmed</p>\n                <p className=\"stateWise_col_active_head\">Active</p>\n                <p className=\"stateWise_col_recovered_head\">Recovered</p>\n                <p className=\"stateWise_col_deceased_head\">Deceased</p>\n                <p className=\"stateWise_col_population_head\">Population</p>\n              </div>\n            </div>\n            <hr className=\"horizontal_line_style\" />\n            <ul className=\"stateWise_row_con\">\n              {stateWiseCovidSortOptionBased.map(eachState => (\n                <StatesData key={eachState.stateCode} eachState={eachState} />\n              ))}\n            </ul>\n          </div>\n        </div>\n\n        <Footer />\n      </>\n    )\n  }\n\n  renderLoaderView = () => (\n    <div className=\"covid-loader-container\" testId=\"homeRouteLoader\">\n      <Loader type=\"Tailspin\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  render() {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusKeys.inprogress:\n        return this.renderLoaderView()\n      case apiStatusKeys.success:\n        return this.renderHomeCovidPage()\n      case apiStatusKeys.failure:\n        return this.renderFailureCase()\n      default:\n        return null\n    }\n  }\n}\n\nexport default Home\n","import './index.css'\n\nconst FaqItems = props => {\n  const {eachFaq} = props\n  const {answer, question} = eachFaq\n  console.log(answer)\n\n  return (\n    <li className=\"faq_list_card\">\n      <p className=\"question_para\">{question}</p>\n      {answer.includes('<a') === false ? (\n        <h1 className=\"answer_para\">{answer} </h1>\n      ) : (\n        <h1 className=\"answer_link_para\">{answer}</h1>\n      )}\n    </li>\n  )\n}\n\nexport default FaqItems\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport NotFound from '../NotFound'\nimport FaqItems from '../FaqItems'\nimport Footer from '../Footer'\nimport './index.css'\n\nconst faqApiStatusKeys = {\n  inprogress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  initial: 'INITIAL',\n}\n\nclass About extends Component {\n  state = {faqList: [], faqApiStatus: faqApiStatusKeys.initial}\n\n  componentDidMount() {\n    this.renderAboutApiCall()\n  }\n\n  renderAboutApiCall = async () => {\n    this.setState({faqApiStatus: faqApiStatusKeys.inprogress})\n    const response = await fetch('https://apis.ccbp.in/covid19-faqs')\n    const data = await response.json()\n\n    if (response.ok) {\n      this.setState({faqApiStatus: faqApiStatusKeys.success, faqList: data.faq})\n    } else {\n      this.setState({faqApiStatus: faqApiStatusKeys.failure})\n    }\n  }\n\n  renderFaqLoaderView = () => (\n    <div className=\"covid-loader-container\" testid=\"aboutRouteLoader\">\n      <Loader type=\"Tailspin\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFaqFailureCase = () => <NotFound />\n\n  renderFaqSuccessView = () => {\n    const {faqList} = this.state\n    console.log(faqList)\n    return (\n      <>\n        <div className=\"about_page\">\n          <h1 className=\"about_head\">About</h1>\n          <p className=\"updated_para\">Last update on march 28th 2021.</p>\n          <h1 className=\"covid19_distribution_head\">\n            COVID-19 vaccines be ready for distribution\n          </h1>\n          <ul className=\"about_faqs_unlist_con\" testid=\"faqsUnorderedList\">\n            {faqList.map(eachFaq => (\n              <FaqItems key={eachFaq.qno} eachFaq={eachFaq} />\n            ))}\n          </ul>\n        </div>\n        <Footer />\n      </>\n    )\n  }\n\n  render() {\n    const {faqApiStatus} = this.state\n\n    switch (faqApiStatus) {\n      case faqApiStatusKeys.inprogress:\n        return this.renderFaqLoaderView()\n      case faqApiStatusKeys.success:\n        return this.renderFaqSuccessView()\n      case faqApiStatusKeys.failure:\n        return this.renderFaqFailureCase()\n      default:\n        return null\n    }\n  }\n}\n\nexport default About\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport {HiLightBulb, HiOutlineLightBulb} from 'react-icons/hi'\nimport {AiOutlineMenuFold, AiOutlineCloseCircle} from 'react-icons/ai'\nimport './index.css'\n\nclass Header extends Component {\n  state = {navMenuBtn: false, themeButton: true}\n\n  userPressMenuButton = () => {\n    this.setState({navMenuBtn: true})\n  }\n\n  userPressCloseIcon = () => {\n    this.setState({navMenuBtn: false})\n  }\n\n  userPressLightThemeIcon = () => {\n    this.setState({themeButton: false})\n  }\n\n  userPressDarkThemeIcon = () => {\n    this.setState({themeButton: true})\n  }\n\n  whenThemeActivatedFunction = () => {\n    const {themeButton} = this.state\n\n    return (\n      <>\n        {themeButton ? (\n          <li className=\"nav_light_list_style\">\n            <button\n              className=\"nav_light_icon_style\"\n              type=\"button\"\n              onClick={this.userPressLightThemeIcon}\n            >\n              <HiOutlineLightBulb className=\"light_icon_style\" />\n            </button>\n          </li>\n        ) : (\n          <li className=\"nav_light_list_style\">\n            <button\n              className=\"nav_light_icon_style\"\n              type=\"button\"\n              onClick={this.userPressDarkThemeIcon}\n            >\n              <HiLightBulb />\n            </button>\n          </li>\n        )}\n      </>\n    )\n  }\n\n  render() {\n    const {navMenuBtn, themeButton} = this.state\n\n    const navThemeCssApply = themeButton ? 'dark_nav_con' : 'light_nav_con'\n    const headCssApply = themeButton\n      ? 'dark_covid_head_style'\n      : 'light_covid_head_style'\n\n    const homeRouteCssApply = themeButton\n      ? 'dark_home_route_list_style'\n      : 'light_home_route_list_style'\n\n    const aboutRouteCssApply = themeButton\n      ? 'dark_about_route_list_style'\n      : 'light_about_route_list_style'\n\n    const closeIconCssApply = themeButton\n      ? 'dark_close_icon_style'\n      : 'light_close_icon_style'\n\n    const menuIconCssApply = themeButton\n      ? 'dark_menu_img_style'\n      : 'light_menu_img_style'\n\n    const vaccinationRouteCssApply = themeButton\n      ? 'dark_vaccine_route_list_style'\n      : 'light_vaccine_route_list_style'\n\n    return (\n      <nav className={navThemeCssApply}>\n        <div className=\"btn_covid_home_card\">\n          <Link to=\"/\" className=\"nav_Link\">\n            <h1 className={headCssApply}>COVID19INDIA</h1>\n          </Link>\n\n          <button\n            className=\"menu_button_style\"\n            type=\"button\"\n            onClick={this.userPressMenuButton}\n          >\n            <AiOutlineMenuFold className={menuIconCssApply} />\n          </button>\n        </div>\n\n        {navMenuBtn ? (\n          <div className=\"home_route_small_card\">\n            <ul className=\"home_route_list_card\">\n              <Link to=\"/\" className=\"nav_Link\">\n                <li className={homeRouteCssApply}>Home</li>\n              </Link>\n              <Link to=\"/vaccination\" className=\"nav_Link\">\n                <li className={vaccinationRouteCssApply}>Vaccination</li>\n              </Link>\n              <Link to=\"/about\" className=\"nav_Link\">\n                <li className={aboutRouteCssApply}>About</li>\n              </Link>\n\n              {this.whenThemeActivatedFunction()}\n            </ul>\n            <button\n              type=\"button\"\n              onClick={this.userPressCloseIcon}\n              className=\"close_icon_btn_style\"\n            >\n              <AiOutlineCloseCircle className={closeIconCssApply} />\n            </button>\n          </div>\n        ) : (\n          ''\n        )}\n\n        <ul className=\"list_items_card\">\n          <Link to=\"/\" className=\"nav_Link\">\n            <li className={homeRouteCssApply}>Home</li>\n          </Link>\n          <Link to=\"/vaccination\" className=\"nav_Link\">\n            <li className={vaccinationRouteCssApply}>Vaccination</li>\n          </Link>\n          <Link to=\"/about\" className=\"nav_Link\">\n            <li className={aboutRouteCssApply}>About</li>\n          </Link>\n          {this.whenThemeActivatedFunction()}\n        </ul>\n      </nav>\n    )\n  }\n}\n\nexport default Header\n","import {Component} from 'react'\n\nimport {AiFillHome} from 'react-icons/ai'\nimport Loader from 'react-loader-spinner'\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  Pie,\n  PieChart,\n  Cell,\n  ResponsiveContainer,\n} from 'recharts'\nimport Footer from '../Footer'\n\nimport NotFound from '../NotFound'\n\nimport './index.css'\n\nconst apiStatusKeys = {\n  inprogress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  initial: 'INITIAL',\n}\n\nclass Vaccination extends Component {\n  state = {\n    apiStatus: apiStatusKeys.initial,\n    stateNamesList: [],\n    selectedState: null,\n    districtNamesList: [],\n    selectedDistrict: null,\n    vaccinationDetailsList: [],\n    activeValue: true,\n  }\n\n  componentDidMount() {\n    this.getVaccinationStateWiseNamesApiCall()\n    this.getVaccinationDistrictWiseNamesApiCall()\n    this.getVaccinationAllDetailsApiCall()\n  }\n\n  userSearchBasedDoses = () => {\n    this.setState({activeValue: true})\n  }\n\n  userSearchBasedAge = () => {\n    this.setState({activeValue: false})\n  }\n\n  whenUserSelectState = event => {\n    this.setState(\n      {selectedState: event.target.value},\n      this.getVaccinationDistrictWiseNamesApiCall,\n    )\n  }\n\n  whenUserSelectDistrict = event => {\n    this.setState({selectedDistrict: event.target.value})\n  }\n\n  getVaccinationStateWiseNamesApiCall = async () => {\n    this.setState({apiStatus: apiStatusKeys.inprogress})\n    const response = await fetch('https://apis.ccbp.in/covid19-state-ids')\n\n    if (response.ok) {\n      const data = await response.json()\n      const stateNamesKeysChange = data.states.map(eachState => ({\n        stateId: eachState.state_id,\n        stateName: eachState.state_name,\n      }))\n\n      this.setState({\n        apiStatus: apiStatusKeys.success,\n        stateNamesList: stateNamesKeysChange,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusKeys.failure})\n    }\n  }\n\n  getVaccinationDistrictWiseNamesApiCall = async () => {\n    const {selectedState} = this.state\n\n    const parsedState = parseInt(selectedState)\n\n    this.setState({apiStatus: apiStatusKeys.inprogress})\n    const response = await fetch(\n      `https://apis.ccbp.in/covid19-districts-data/${parsedState}`,\n    )\n\n    if (response.ok) {\n      const data = await response.json()\n      const districtNamesKeysChange = data.districts.map(eachDistrict => ({\n        districtId: eachDistrict.district_id,\n        districtName: eachDistrict.district_name,\n      }))\n      this.setState({\n        apiStatus: apiStatusKeys.success,\n        districtNamesList: districtNamesKeysChange,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusKeys.failure})\n    }\n  }\n\n  getVaccinationAllDetailsApiCall = async () => {\n    this.setState({apiStatus: apiStatusKeys.inprogress})\n    const response = await fetch(\n      'https://apis.ccbp.in/covid19-vaccination-data',\n    )\n\n    if (response.ok) {\n      const data = await response.json()\n\n      const vaccinationDosesAsPerAgeBasedObj = data.timeWiseTodayRegReport.map(\n        eachDose => ({\n          age18: eachDose.age18,\n          age45: eachDose.age45,\n          age60: eachDose.age60,\n          label: eachDose.label.substring(6),\n          total: eachDose.total,\n        }),\n      )\n\n      const vaccinationKeysInfo = data.topBlock.sites\n      const vaccinationGenderObject = {\n        male: data.topBlock.vaccination.male,\n        female: data.topBlock.vaccination.female,\n        others: data.topBlock.vaccination.others,\n      }\n\n      const vaccinationVaccineObject = {\n        covaxin: data.topBlock.vaccination.covaxin,\n        covishield: data.topBlock.vaccination.covishield,\n        sputnik: data.topBlock.vaccination.sputnik,\n      }\n\n      const totalDosesObj = {\n        dose1: data.topBlock.vaccination.tot_dose_1,\n        dose2: data.topBlock.vaccination.tot_dose_2,\n        totalDoses: data.topBlock.vaccination.total_doses,\n      }\n\n      const vaccinationDoneByAge = {\n        'Above 60': data.vaccinationByAge.above_60,\n\n        '18-44': data.vaccinationByAge.vac_18_45,\n        '45-60': data.vaccinationByAge.vac_45_60,\n      }\n\n      const vaccinationDoneByTime = data.vaccinationDoneByTime.map(\n        eachTime => ({\n          count: eachTime.count,\n          timeDose1: eachTime.dose_one,\n          timeDose2: eachTime.dose_two,\n          label: eachTime.label,\n        }),\n      )\n\n      this.setState(prevState => ({\n        apiStatus: apiStatusKeys.success,\n        vaccinationDetailsList: [\n          ...prevState.vaccinationDetailsList,\n          vaccinationKeysInfo,\n          vaccinationVaccineObject,\n          vaccinationGenderObject,\n          vaccinationDoneByAge,\n          vaccinationDoneByTime,\n          totalDosesObj,\n          vaccinationDosesAsPerAgeBasedObj,\n        ],\n      }))\n    } else {\n      this.setState({apiStatus: apiStatusKeys.failure})\n    }\n  }\n\n  renderVaccinationFailureView = () => <NotFound />\n\n  renderVaccinationLoaderView = () => (\n    <div className=\"covid-loader-container\" testId=\"vaccinationDetailsLoader\">\n      <Loader type=\"Tailspin\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderVaccinationDetails = () => {\n    const {\n      stateNamesList,\n      selectedState,\n      districtNamesList,\n      selectedDistrict,\n      vaccinationDetailsList,\n      activeValue,\n    } = this.state\n\n    const activeDosesButtonClass = activeValue\n      ? 'vaccination_line_chart_byDoses_active_Button'\n      : 'vaccination_line_chart_byDoses_deActive_Button'\n\n    const activeAgedButtonClass = activeValue\n      ? 'vaccination_line_chart_byAge_deActive_Button'\n      : 'vaccination_line_chart_byAge_active_Button'\n    const vaccinationSitesDetailsNotEmpty =\n      vaccinationDetailsList.length === 0\n        ? vaccinationDetailsList\n        : vaccinationDetailsList[0]\n    const vaccinationDosesDetailsNotEmpty =\n      vaccinationDetailsList.length === 0\n        ? vaccinationDetailsList\n        : vaccinationDetailsList[1]\n    const vaccinationDosesAsPerAge =\n      vaccinationDetailsList.length === 0\n        ? vaccinationDetailsList\n        : vaccinationDetailsList[2]\n\n    const vaccinationDetailsAsPerAge =\n      vaccinationDetailsList.length === 0\n        ? vaccinationDetailsList\n        : vaccinationDetailsList[3]\n\n    const VaccinationLineData =\n      vaccinationDetailsList.length === 0\n        ? vaccinationDetailsList\n        : vaccinationDetailsList[4]\n\n    const VaccinationDosesData =\n      vaccinationDetailsList.length === 0\n        ? vaccinationDetailsList\n        : vaccinationDetailsList[5]\n\n    const vaccinationAgeDosesData =\n      vaccinationDetailsList.length === 0\n        ? vaccinationDetailsList\n        : vaccinationDetailsList[6]\n\n    const dataFormatter = number => {\n      if (number > 1000) {\n        return `${(number / 1000).toString()}k`\n      }\n      return number.toString()\n    }\n\n    const {totalDoses, dose1, dose2} = VaccinationDosesData\n\n    const keyNames = Object.keys(vaccinationDosesAsPerAge)\n\n    let genderChartList = []\n\n    keyNames.forEach(keyName => {\n      if (vaccinationDosesAsPerAge[keyName]) {\n        genderChartList = [\n          ...genderChartList,\n          {\n            count: vaccinationDosesAsPerAge[keyName],\n            gender: keyName,\n          },\n        ]\n      }\n    })\n\n    const keyNamesVaccineType = Object.keys(vaccinationDosesDetailsNotEmpty)\n\n    let vaccineTypeChartList = []\n\n    keyNamesVaccineType.forEach(keyName => {\n      if (vaccinationDosesDetailsNotEmpty[keyName]) {\n        vaccineTypeChartList = [\n          ...vaccineTypeChartList,\n          {\n            count: vaccinationDosesDetailsNotEmpty[keyName],\n            vaccineType: keyName,\n          },\n        ]\n      }\n    })\n\n    const keyNamesAgedBased = Object.keys(vaccinationDetailsAsPerAge)\n\n    let vaccineAgedBasedChartList = []\n\n    keyNamesAgedBased.forEach(keyName => {\n      if (vaccinationDetailsAsPerAge[keyName]) {\n        vaccineAgedBasedChartList = [\n          ...vaccineAgedBasedChartList,\n          {\n            count: vaccinationDetailsAsPerAge[keyName],\n            vaccineAgeCategory: keyName,\n          },\n        ]\n      }\n    })\n\n    const {total, govt, pvt} = vaccinationSitesDetailsNotEmpty\n\n    const stateHead =\n      selectedState === null ? 'Andaman and Nicobar Islands' : selectedState\n\n    return (\n      <>\n        <div className=\"vaccination_page\">\n          <div className=\"vaccination_state_name_head_card\">\n            <AiFillHome className=\"home_icon_style\" />\n            <p className=\"state_head_style\">{`India/${stateHead}`}</p>\n          </div>\n          <div className=\"state_districts_dropdown_con\">\n            <select\n              className=\"state_names_select_card\"\n              onChange={this.whenUserSelectState}\n              value={selectedState}\n            >\n              <option\n                hidden\n                value=\"Select State\"\n                className=\"state_option_style\"\n              >\n                Select State\n              </option>\n              {stateNamesList.map(eachState => (\n                <option value={eachState.stateId} key={eachState.stateId}>\n                  {eachState.stateName}\n                </option>\n              ))}\n            </select>\n            <select\n              className=\"district_names_select_card\"\n              onChange={this.whenUserSelectDistrict}\n              value={selectedDistrict}\n            >\n              <option\n                hidden\n                value=\"Select District\"\n                className=\"state_option_style\"\n              >\n                Select District\n              </option>\n              {districtNamesList.map(eachDistrict => (\n                <option\n                  value={eachDistrict.districtName}\n                  key={eachDistrict.districtId}\n                >\n                  {eachDistrict.districtName}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"vaccination_sites_doses_con\">\n            <div className=\"vaccination_sites_card\">\n              <img\n                src=\"https://res.cloudinary.com/dkz4qzdsw/image/upload/v1639204644/Group_7476vaccinesym_pqy2st.png\"\n                className=\"vaccination_img\"\n                alt=\"vaccinationSiteSearch\"\n              />\n              <div className=\"sites_stats_card\">\n                <div className=\"site_conducting_card\">\n                  <p className=\"site_conducting_style\">\n                    Site Conducting Vaccination\n                  </p>\n                  <p className=\"site_conducting_stats_style\">{total}</p>\n                </div>\n                <div className=\"government_private_sites_card\">\n                  <div className=\"site_government_card\">\n                    <p className=\"site_government_style\">Government</p>\n                    <p className=\"site_government_stats_style\">{govt}</p>\n                  </div>\n                  <div className=\"site_pvt_card\">\n                    <p className=\"site_pvt_style\">Private</p>\n                    <p className=\"site_pvt_stats_style\">{pvt}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"vaccination_doses_card\">\n              <img\n                src=\"https://res.cloudinary.com/dkz4qzdsw/image/upload/v1639207416/Group_7482admin_pa02dc.png\"\n                className=\"admin_img\"\n                alt=\"vaccinationAdmin\"\n              />\n              <div className=\"doses_stats_card\">\n                <div className=\"total_doses_card\">\n                  <p className=\"total_doses_style\">Total Vaccination Doses</p>\n                  <p className=\"total_doses_stats_style\">{totalDoses}</p>\n                </div>\n                <div className=\"dose1_dose2_card\">\n                  <div className=\"dose1_card\">\n                    <p className=\"dose1_style\">Dose 1</p>\n                    <p className=\"dose1_stats_style\">{dose1}</p>\n                  </div>\n                  <div className=\"dose2_card\">\n                    <p className=\"dose2_style\">Dose 2</p>\n                    <p className=\"dose2_stats_style\">{dose2}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"vaccination_line_con\">\n          <h1 className=\"vaccination_line_chart_head\">Vaccination Trends</h1>\n          <div className=\"vaccination_line_chart_button_card\">\n            <button\n              className={activeDosesButtonClass}\n              type=\"button\"\n              onClick={this.userSearchBasedDoses}\n            >\n              By Doses\n            </button>\n            <button\n              className={activeAgedButtonClass}\n              type=\"button\"\n              onClick={this.userSearchBasedAge}\n            >\n              By Age\n            </button>\n          </div>\n          {activeValue ? (\n            <AreaChart\n              width={1200}\n              height={700}\n              data={VaccinationLineData}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <XAxis dataKey=\"label\" />\n              <YAxis tickFormatter={dataFormatter} />\n\n              <Tooltip />\n              <Legend />\n              <Area\n                type=\"monotone\"\n                dataKey=\"count\"\n                stroke=\"#A226DC\"\n                activeDot={{r: 8}}\n                fill=\"#A226DC\"\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"timeDose1\"\n                stroke=\"#FCEA4E\"\n                fill=\"#3E4226\"\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"timeDose2\"\n                stroke=\"#37C62B\"\n                fill=\"#233323\"\n              />\n            </AreaChart>\n          ) : (\n            <AreaChart\n              width={1200}\n              height={500}\n              data={vaccinationAgeDosesData}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <XAxis dataKey=\"label\" />\n              <YAxis tickFormatter={dataFormatter} />\n\n              <Tooltip />\n              <Legend />\n              <Area\n                type=\"monotone\"\n                dataKey=\"age18\"\n                stroke=\"#A226DC\"\n                activeDot={{r: 8}}\n                fill=\"#A226DC\"\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"age45\"\n                stroke=\"#FCEA4E\"\n                fill=\"#3E4226\"\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"age60\"\n                stroke=\"#37C62B\"\n                fill=\"#233323\"\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"total\"\n                stroke=\"#37C62B\"\n                fill=\"#233323\"\n              />\n            </AreaChart>\n          )}\n        </div>\n        <div className=\"vaccination_pie_radius_con\">\n          <div className=\"vaccination_pie_half_radius_con\">\n            <h1 className=\"vaccination_pie_radius_chart_head\">\n              Vaccination Category\n            </h1>\n\n            <ResponsiveContainer height={300} width={450}>\n              <PieChart>\n                <Pie\n                  data={genderChartList}\n                  startAngle={0}\n                  endAngle={180}\n                  innerRadius=\"40%\"\n                  outerRadius=\"70%\"\n                  dataKey=\"count\"\n                >\n                  <Cell name=\"male\" fill=\"#fecba6\" />\n                  <Cell name=\"female\" fill=\"#b3d23f\" />\n                  <Cell name=\"others\" fill=\"#a44c9e\" />\n                </Pie>\n                <Legend\n                  iconType=\"circle\"\n                  layout=\"horizontal\"\n                  verticalAlign=\"bottom\"\n                  align=\"center\"\n                />\n              </PieChart>\n            </ResponsiveContainer>\n\n            <ResponsiveContainer height={300} width={450}>\n              <PieChart>\n                <Pie\n                  data={vaccineTypeChartList}\n                  startAngle={0}\n                  endAngle={180}\n                  innerRadius=\"40%\"\n                  outerRadius=\"70%\"\n                  dataKey=\"count\"\n                >\n                  <Cell name=\"sputnik\" fill=\"#fecba6\" />\n                  <Cell name=\"covaxin\" fill=\"#b3d23f\" />\n                  <Cell name=\"covishield\" fill=\"#a44c9e\" />\n                </Pie>\n                <Legend\n                  iconType=\"circle\"\n                  layout=\"horizontal\"\n                  verticalAlign=\"bottom\"\n                  align=\"center\"\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"vaccination_pie_full_radius_circle_con\">\n            <h1 className=\"vaccination_pie_full_radius_chart_head\">\n              Vaccination by Age\n            </h1>\n            <ResponsiveContainer height={300} width={450}>\n              <PieChart>\n                <Pie\n                  data={vaccineAgedBasedChartList}\n                  startAngle={0}\n                  endAngle={360}\n                  outerRadius={80}\n                  dataKey=\"count\"\n                >\n                  <Cell name=\"18-44\" fill=\"#b3d23f\" />\n                  <Cell name=\"45-60\" fill=\"#a44c9e\" />\n                  <Cell name=\"Above 60\" fill=\"#fecba6\" />\n                </Pie>\n                <Legend\n                  iconType=\"circle\"\n                  layout=\"horizontal\"\n                  verticalAlign=\"bottom\"\n                  align=\"center\"\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n        <Footer />\n      </>\n    )\n  }\n\n  render() {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusKeys.inprogress:\n        return this.renderVaccinationLoaderView()\n      case apiStatusKeys.failure:\n        return this.renderVaccinationFailureView()\n      case apiStatusKeys.success:\n        return this.renderVaccinationDetails()\n      default:\n        return null\n    }\n  }\n}\n\nexport default Vaccination\n","import './index.css'\n\nconst CasesStatus = props => {\n  const {\n    confirmedStats,\n    recoveredStats,\n    activeStats,\n    deceasedStats,\n    whenUserClickConfirmedCases,\n    whenUserClickActiveCases,\n    whenUserClickRecoveredCases,\n    whenUserClickDeceasedCases,\n    activeStatus,\n  } = props\n\n  const confirmedClass = activeStatus === 'confirmed' ? 'confirmed_bg_card' : ''\n\n  const activeClass = activeStatus === 'activeValue' ? 'active_bg_card' : ''\n\n  const recoveredClass =\n    activeStatus === 'recoveredValue' ? 'recovered_bg_card' : ''\n\n  const deceasedClass =\n    activeStatus === 'deceasedValue' ? 'deceased_bg_card' : ''\n\n  const onClickConfirmedBtn = () => {\n    whenUserClickConfirmedCases()\n  }\n\n  const onClickActiveBtn = () => {\n    whenUserClickActiveCases()\n  }\n\n  const onClickRecoveredBtn = () => {\n    whenUserClickRecoveredCases()\n  }\n\n  const onClickDeceasedBtn = () => {\n    whenUserClickDeceasedCases()\n  }\n  return (\n    <div className=\"countrywide_page\">\n      <div className=\"countrywide_covid_stats_con\">\n        <button\n          type=\"button\"\n          onClick={onClickConfirmedBtn}\n          className=\"confirmed_card_btn\"\n        >\n          <div\n            className={`confirmed_card ${confirmedClass}`}\n            testId=\"stateSpecificConfirmedCasesContainer\"\n          >\n            <p className=\"confirmed_para\">Confirmed</p>\n            <img\n              src=\"https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638163795/Groupconfirmed_r0ng1r.png\"\n              alt=\"state specific confirmed cases pic\"\n              className=\"confirmed_image\"\n            />\n            <p className=\"confirmed_cases_para\">{confirmedStats}</p>\n          </div>\n        </button>\n        <button\n          type=\"button\"\n          onClick={onClickActiveBtn}\n          className=\"active_card_btn\"\n        >\n          <div\n            className={`active_card ${activeClass}`}\n            testId=\"stateSpecificActiveCasesContainer\"\n          >\n            <p className=\"active_para\">Active</p>\n            <img\n              src=\"https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638163837/protection_1active_lz4jqs.png\"\n              alt=\"state specific active cases pic\"\n              className=\"active_image\"\n            />\n            <p className=\"active_cases_para\">{activeStats}</p>\n          </div>\n        </button>\n        <button\n          type=\"button\"\n          onClick={onClickRecoveredBtn}\n          className=\"recovered_card_btn\"\n        >\n          <div\n            className={`recovered_card ${recoveredClass}`}\n            testId=\"stateSpecificRecoveredCasesContainer\"\n          >\n            <p className=\"recover_para\">Recovered</p>\n            <img\n              src=\"https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638163886/recovered_1recovered_rslph4.png\"\n              alt=\"state specific recovered cases pic\"\n              className=\"recover_image\"\n            />\n            <p className=\"recover_cases_para\">{recoveredStats}</p>\n          </div>\n        </button>\n        <button\n          type=\"button\"\n          onClick={onClickDeceasedBtn}\n          className=\"deceased_card_btn\"\n        >\n          <div\n            className={`deceased_card ${deceasedClass}`}\n            testId=\"stateSpecificDeceasedCasesContainer\"\n          >\n            <p className=\"decease_para\">Deceased</p>\n            <img\n              src=\"https://res.cloudinary.com/dkz4qzdsw/image/upload/v1638163603/breathing_1deceased_i1q80r.png\"\n              alt=\"state specific deceased cases pic\"\n              className=\"decease_image\"\n            />\n            <p className=\"decease_cases_para\">{deceasedStats}</p>\n          </div>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default CasesStatus\n","import {Component} from 'react'\n\nimport {\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Line,\n  BarChart,\n  Bar,\n} from 'recharts'\n\nimport Loader from 'react-loader-spinner'\n\nimport NotFound from '../NotFound'\nimport './index.css'\n\nconst apiStatusKeys = {\n  inprogress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  initial: 'INITIAL',\n}\n\nconst activeCategory = {\n  confirmed: 'confirmed',\n  active: 'activeValue',\n  recovered: 'recoveredValue',\n  deceased: 'deceasedValue',\n}\n\nclass TimeLineData extends Component {\n  state = {\n    apiStatus: apiStatusKeys.initial,\n\n    timeLineData: [],\n  }\n\n  componentDidMount() {\n    this.spreadTimeLinesApiCall()\n  }\n\n  spreadTimeLinesApiCall = async () => {\n    this.setState({apiStatus: apiStatusKeys.inprogress})\n    const {stateNameCode} = this.props\n\n    const timelineResponse = await fetch(\n      `https://apis.ccbp.in/covid19-timelines-data/${stateNameCode}`,\n    )\n    const timelineData = await timelineResponse.json()\n\n    if (timelineResponse.ok) {\n      this.convertAllDatesDataINtoArray(timelineData[stateNameCode].dates)\n\n      this.setState({\n        apiStatus: apiStatusKeys.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusKeys.failure})\n    }\n  }\n\n  convertAllDatesDataINtoArray = data => {\n    const resultList = []\n    const confirmedSpreadList = []\n    const deceasedSpreadList = []\n    const recoveredSpreadList = []\n    const testedSpreadList = []\n    const activeSpreadList = []\n    const totalPositiveList = []\n    const keyNames = Object.keys(data)\n    keyNames.forEach(keyName => {\n      if (data[keyName]) {\n        const {total} = data[keyName]\n        const confirmed = total.confirmed ? total.confirmed : 0\n        const deceased = total.deceased ? total.deceased : 0\n        const recovered = total.recovered ? total.recovered : 0\n        const tested = total.tested ? total.tested : 0\n        const totalActive = confirmed - (deceased + recovered)\n        const totalPositive = tested / recovered\n        const mainDate = keyName\n        confirmedSpreadList.push({\n          confirmedDate: mainDate,\n          Confirmed: confirmed,\n        })\n\n        deceasedSpreadList.push({\n          deceasedDate: mainDate,\n          Deceased: deceased,\n        })\n\n        recoveredSpreadList.push({\n          recoveredDate: mainDate,\n          Recovered: recovered,\n        })\n\n        testedSpreadList.push({\n          testedDate: mainDate,\n          Tested: tested,\n        })\n\n        activeSpreadList.push({\n          activeDate: mainDate,\n          TotalActive: totalActive,\n        })\n        totalPositiveList.push({\n          positiveDate: mainDate,\n          'Test Positivity Ratio': totalPositive,\n        })\n      }\n    })\n    resultList.push(\n      confirmedSpreadList,\n      activeSpreadList,\n      recoveredSpreadList,\n      deceasedSpreadList,\n\n      testedSpreadList,\n      totalPositiveList,\n    )\n    this.setState({timeLineData: resultList})\n  }\n\n  renderSpreadTrends = () => {}\n\n  renderConfirmedLineChart = () => {\n    const {timeLineData} = this.state\n\n    return (\n      <div className=\"confirmed_line_chart_card\">\n        <LineChart\n          width={1200}\n          height={250}\n          data={timeLineData[0]}\n          margin={{top: 5, right: 30, left: 20, bottom: 5}}\n        >\n          <XAxis dataKey=\"confirmedDate\" stroke=\"#FF073A\" />\n          <YAxis stroke=\"#FF073A\" />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"Confirmed\" stroke=\"#FF073A\" />\n        </LineChart>\n      </div>\n    )\n  }\n\n  renderActiveLineChart = () => {\n    const {timeLineData} = this.state\n\n    return (\n      <div className=\"active_line_chart_card\">\n        <LineChart\n          width={1200}\n          height={250}\n          data={timeLineData[1]}\n          margin={{top: 5, right: 30, left: 20, bottom: 5}}\n        >\n          <XAxis dataKey=\"activeDate\" stroke=\"#007BFF\" />\n          <YAxis stroke=\"#007BFF\" />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"TotalActive\" stroke=\"#007BFF\" />\n        </LineChart>\n      </div>\n    )\n  }\n\n  renderRecoveredLineChart = () => {\n    const {timeLineData} = this.state\n\n    return (\n      <div className=\"recovered_line_chart_card\">\n        <LineChart\n          width={1200}\n          height={250}\n          data={timeLineData[2]}\n          margin={{top: 5, right: 30, left: 20, bottom: 5}}\n        >\n          <XAxis dataKey=\"recoveredDate\" stroke=\"#27A243\" />\n          <YAxis stroke=\"#27A243\" />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"Recovered\" stroke=\"#27A243\" />\n        </LineChart>\n      </div>\n    )\n  }\n\n  renderDeceasedLineChart = () => {\n    const {timeLineData} = this.state\n\n    return (\n      <div className=\"deceased_line_chart_card\">\n        <LineChart\n          width={1200}\n          height={250}\n          data={timeLineData[3]}\n          margin={{top: 5, right: 30, left: 20, bottom: 5}}\n        >\n          <XAxis dataKey=\"deceasedDate\" stroke=\"#6C757D\" />\n          <YAxis stroke=\"#6C757D\" />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"Deceased\" stroke=\"#6C757D\" />\n        </LineChart>\n      </div>\n    )\n  }\n\n  renderTestedLineChart = () => {\n    const {timeLineData} = this.state\n\n    return (\n      <div className=\"tested_line_chart_card\">\n        <LineChart\n          width={1200}\n          height={250}\n          data={timeLineData[4]}\n          margin={{top: 5, right: 30, left: 20, bottom: 5}}\n        >\n          <XAxis dataKey=\"testedDate\" stroke=\"#9673B9\" />\n          <YAxis stroke=\"#9673B9\" />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"Tested\" stroke=\"#9673B9\" />\n        </LineChart>\n      </div>\n    )\n  }\n\n  slicingItemsFunction = indexItem => {\n    const {timeLineData} = this.state\n    const firstTimeSlice = timeLineData[indexItem].length - 10\n    const secondEndSlice = timeLineData[indexItem].length\n    const timeBarGraphList = timeLineData[indexItem].slice(\n      firstTimeSlice,\n      secondEndSlice,\n    )\n    return timeBarGraphList\n  }\n\n  renderConfirmedBarChart = () => {\n    const data = this.slicingItemsFunction(0)\n\n    return (\n      <div className=\"confirmed_bar_chart_card\">\n        <BarChart width={1200} height={450} data={data}>\n          <XAxis dataKey=\"confirmedDate\" fill=\"#9A0E31\" />\n\n          <Legend />\n          <Bar\n            dataKey=\"Confirmed\"\n            fill=\"#9A0E31\"\n            className=\"bar\"\n            label={{position: 'top', color: '#9A0E31'}}\n          />\n        </BarChart>\n      </div>\n    )\n  }\n\n  renderActiveBarChart = () => {\n    const data = this.slicingItemsFunction(1)\n\n    return (\n      <div className=\"active_bar_chart_card\">\n        <BarChart width={1200} height={450} data={data}>\n          <XAxis dataKey=\"activeDate\" fill=\"#0A4FA0\" />\n\n          <Legend />\n          <Bar\n            dataKey=\"TotalActive\"\n            fill=\"#0A4FA0\"\n            className=\"bar\"\n            label={{position: 'top', color: '#0A4FA0'}}\n          />\n        </BarChart>\n      </div>\n    )\n  }\n\n  renderRecoveredBarChart = () => {\n    const data = this.slicingItemsFunction(2)\n\n    return (\n      <div className=\"recovered_bar_chart_card\">\n        <BarChart width={1200} height={450} data={data}>\n          <XAxis dataKey=\"recoveredDate\" fill=\"#216837\" />\n\n          <Legend />\n          <Bar\n            dataKey=\"Recovered\"\n            fill=\"#216837\"\n            className=\"bar\"\n            label={{position: 'top', color: '#216837'}}\n          />\n        </BarChart>\n      </div>\n    )\n  }\n\n  renderDeceasedBarChart = () => {\n    const data = this.slicingItemsFunction(3)\n\n    return (\n      <div className=\"deceased_bar_chart_card\">\n        <BarChart width={1200} height={450} data={data}>\n          <XAxis dataKey=\"deceasedDate\" fill=\"#474C57\" />\n\n          <Legend />\n          <Bar\n            dataKey=\"Deceased\"\n            fill=\"#474C57\"\n            className=\"bar\"\n            label={{position: 'top', color: '#474C57'}}\n          />\n        </BarChart>\n      </div>\n    )\n  }\n\n  covidCasesCategoryTypeBarCharts = () => {\n    const {activeType} = this.props\n\n    switch (activeType) {\n      case activeCategory.active:\n        return this.renderActiveBarChart()\n      case activeCategory.confirmed:\n        return this.renderConfirmedBarChart()\n      case activeCategory.recovered:\n        return this.renderRecoveredBarChart()\n      case activeCategory.deceased:\n        return this.renderDeceasedBarChart()\n      default:\n        return null\n    }\n  }\n\n  renderTimeLineBarAndLineCharts = () => (\n    <>\n      <div>{this.covidCasesCategoryTypeBarCharts()}</div>\n      <h1 className=\"spread_heading\">Spread Trends</h1>\n      <div className=\"cumulative_daily_card\">\n        <button type=\"button\" className=\"cumulative_btn\">\n          Cumulative\n        </button>\n        <button\n          type=\"button\"\n          className=\"daily_btn\"\n          onClick={this.whenUserPressDailyButton}\n        >\n          Daily\n        </button>\n      </div>\n      <div testid=\"lineChartsContainer\">\n        {this.renderConfirmedLineChart()}\n        {this.renderActiveLineChart()}\n        {this.renderRecoveredLineChart()}\n        {this.renderDeceasedLineChart()}\n        {this.renderTestedLineChart()}\n      </div>\n    </>\n  )\n\n  renderLoaderView = () => (\n    <div className=\"covid-loader-container\" testid=\"timelinesDataLoader\">\n      <Loader type=\"Tailspin\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureCase = () => <NotFound />\n\n  render() {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusKeys.inprogress:\n        return this.renderLoaderView()\n      case apiStatusKeys.success:\n        return this.renderTimeLineBarAndLineCharts()\n      case apiStatusKeys.failure:\n        return this.renderFailureCase()\n      default:\n        return null\n    }\n  }\n}\n\nexport default TimeLineData\n","import {Component} from 'react'\n\nimport Loader from 'react-loader-spinner'\nimport {changeStateKeysData} from '../Home/index'\n\nimport CasesStatus from '../CasesStatus'\nimport TimeLineData from '../TimeLineData'\nimport NotFound from '../NotFound'\nimport Footer from '../Footer'\nimport './index.css'\n\nconst apiStatusKeys = {\n  inprogress: 'INPROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  initial: 'INITIAL',\n}\n\nclass SearchCovidCasesByIndividualStates extends Component {\n  state = {\n    districtsObj: [],\n    metaObj: {},\n    totalCasesObj: {},\n    apiStatus: apiStatusKeys.initial,\n    stateName: '',\n    activeStatus: 'confirmed',\n    stateNameCode: '',\n  }\n\n  componentDidMount() {\n    this.userSearchStateWiseData()\n  }\n\n  userSearchStateWiseData = async () => {\n    this.setState({apiStatus: apiStatusKeys.inprogress})\n    const {match} = this.props\n    const {params} = match\n    const {stateCode} = params\n    stateCode.toUpperCase()\n\n    const response = await fetch('https://apis.ccbp.in/covid19-state-wise-data')\n\n    const data = await response.json()\n\n    this.setState({stateNameCode: stateCode})\n\n    if (response.ok) {\n      const stateInformation = data[stateCode]\n\n      this.convertDistrictsDataIntoListItemsUsingForInMethod(\n        stateInformation.districts,\n      )\n\n      const totalCasesItems = stateInformation.total\n\n      const metaInfoItems = {\n        date: stateInformation.meta.date,\n        lastUpdated: stateInformation.meta.last_updated,\n        population: stateInformation.meta.population,\n        testedDate: stateInformation.meta.tested.date,\n        vaccinatedDate: stateInformation.meta.vaccinated,\n      }\n\n      const stateValue = changeStateKeysData.find(\n        eachState => eachState.stateCode === stateCode,\n      )\n      const stateNameFinal = stateValue.stateName\n\n      this.setState({\n        apiStatus: apiStatusKeys.success,\n\n        metaObj: metaInfoItems,\n        totalCasesObj: totalCasesItems,\n        stateName: stateNameFinal,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusKeys.failure})\n    }\n  }\n\n  convertDistrictsDataIntoListItemsUsingForInMethod = data => {\n    const resultList = []\n    const keyNames = Object.keys(data)\n    keyNames.forEach(keyName => {\n      if (data[keyName]) {\n        const {total} = data[keyName]\n\n        const confirmed = total.confirmed ? total.confirmed : 0\n        const deceased = total.deceased ? total.deceased : 0\n        const recovered = total.recovered ? total.recovered : 0\n        const tested = total.tested ? total.tested : 0\n\n        const districtName = keyName\n\n        resultList.push({\n          districtName,\n          confirmed,\n          deceased,\n          recovered,\n\n          tested,\n          active: confirmed - (deceased + recovered),\n        })\n      }\n    })\n    this.setState({districtsObj: resultList})\n  }\n\n  whenUserClickConfirmedCases = () => {\n    this.setState({activeStatus: 'confirmed'})\n  }\n\n  renderConfirmedCases = () => {\n    const {districtsObj} = this.state\n\n    districtsObj.sort((a, b) => b.confirmed - a.confirmed)\n\n    return (\n      <ul className=\"districts_unlist_con\" testid=\"topDistrictsUnorderedList\">\n        {districtsObj.map(eachDistrict => (\n          <li className=\"districts_list_card\" key={eachDistrict.districtName}>\n            <p className=\"district_stats_style\">{eachDistrict.confirmed}</p>\n            <p className=\"district_name_style\">{eachDistrict.districtName}</p>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  whenUserClickActiveCases = () => {\n    this.setState({activeStatus: 'activeValue'})\n  }\n\n  renderActiveCases = () => {\n    const {districtsObj} = this.state\n    districtsObj.sort((a, b) => b.active - a.active)\n    return (\n      <ul className=\"districts_unlist_con\" testid=\"topDistrictsUnorderedList\">\n        {districtsObj.map(eachDistrict => (\n          <li className=\"districts_list_card\" key={eachDistrict.districtName}>\n            <p className=\"district_stats_style\">{eachDistrict.active}</p>\n            <p className=\"district_name_style\">{eachDistrict.districtName}</p>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  whenUserClickRecoveredCases = () => {\n    this.setState({activeStatus: 'recoveredValue'})\n  }\n\n  renderRecoveredCases = () => {\n    const {districtsObj} = this.state\n    districtsObj.sort((a, b) => b.recovered - a.recovered)\n    return (\n      <ul className=\"districts_unlist_con\" testid=\"topDistrictsUnorderedList\">\n        {districtsObj.map(eachDistrict => (\n          <li className=\"districts_list_card\" key={eachDistrict.districtName}>\n            <p className=\"district_stats_style\">{eachDistrict.recovered}</p>\n            <p className=\"district_name_style\">{eachDistrict.districtName}</p>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  whenUserClickDeceasedCases = () => {\n    this.setState({activeStatus: 'deceasedValue'})\n  }\n\n  renderDeceasedCases = () => {\n    const {districtsObj} = this.state\n    districtsObj.sort((a, b) => b.deceased - a.deceased)\n    return (\n      <ul className=\"districts_unlist_con\" testid=\"topDistrictsUnorderedList\">\n        {districtsObj.map(eachDistrict => (\n          <li className=\"districts_list_card\" key={eachDistrict.districtName}>\n            <p className=\"district_stats_style\">{eachDistrict.deceased}</p>\n            <p className=\"district_name_style\">{eachDistrict.districtName}</p>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n  renderDistrictCasesOnSelectionBasis = () => {\n    const {activeStatus} = this.state\n\n    switch (activeStatus) {\n      case 'confirmed':\n        return this.renderConfirmedCases()\n      case 'activeValue':\n        return this.renderActiveCases()\n      case 'recoveredValue':\n        return this.renderRecoveredCases()\n      case 'deceasedValue':\n        return this.renderDeceasedCases()\n      default:\n        return null\n    }\n  }\n\n  renderStatesCovidInformation = () => {\n    const {\n      stateName,\n      metaObj,\n      totalCasesObj,\n      activeStatus,\n      stateNameCode,\n    } = this.state\n\n    const stateMap = changeStateKeysData.find(\n      eachImage => eachImage.stateCode === stateNameCode,\n    )\n    const stateMapUrl = stateMap.stateImageUrl\n\n    const {tested, confirmed, deceased, recovered} = totalCasesObj\n    const activeStats = confirmed - (deceased + recovered)\n    const {lastUpdated, population, testedDate} = metaObj\n\n    const fullDate = new Date(testedDate)\n    const testedLastDate = fullDate.getDate()\n    const testedLastMonth = fullDate.getMonth()\n\n    return (\n      <>\n        <div className=\"covidCases_individual_states_page\">\n          <div className=\"covidTested_head_card\">\n            <h1 className=\"covid_state_name_head\">{stateName}</h1>\n            <ul className=\"covid_tested_card\">\n              <p className=\"covid_tested_para\">Tested</p>\n              <p className=\"covid_tested_stats_para\">{tested}</p>\n            </ul>\n          </div>\n          <p className=\"covid_last_update_para\">{`Last update on ${lastUpdated}`}</p>\n          <CasesStatus\n            confirmedStats={confirmed}\n            recoveredStats={recovered}\n            deceasedStats={deceased}\n            activeStats={activeStats}\n            whenUserClickConfirmedCases={this.whenUserClickConfirmedCases}\n            whenUserClickActiveCases={this.whenUserClickActiveCases}\n            whenUserClickDeceasedCases={this.whenUserClickDeceasedCases}\n            whenUserClickRecoveredCases={this.whenUserClickRecoveredCases}\n            activeStatus={activeStatus}\n          />\n\n          <div className=\"map_image_container\">\n            <img\n              src={stateMapUrl}\n              className=\"map_image_style\"\n              alt=\"stateMapImage\"\n            />\n            <div className=\"ncp_report_card\">\n              <div>\n                <h1 className=\"ncp_report_head\">NCP Report</h1>\n                <div className=\"population_card\">\n                  <p className=\"population_label\">Population</p>\n                  <p className=\"population_value\">{population}</p>\n                </div>\n              </div>\n              <div className=\"tested_card\">\n                <p className=\"tested_label\">Tested</p>\n                <p className=\"tested_value\">{tested}</p>\n                <p className=\"tested_date\">{`(As of ${testedLastDate} ${testedLastMonth} per source)`}</p>\n              </div>\n            </div>\n          </div>\n\n          <h1 className=\"districts_head_style\">Top Districts</h1>\n\n          {this.renderDistrictCasesOnSelectionBasis()}\n          <TimeLineData\n            stateNameCode={stateNameCode}\n            activeType={activeStatus}\n          />\n        </div>\n        <Footer />\n      </>\n    )\n  }\n\n  renderLoaderView = () => (\n    <div className=\"covid-loader-container\" testid=\"stateDetailsLoader\">\n      <Loader type=\"Tailspin\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureCase = () => <NotFound />\n\n  render() {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusKeys.inprogress:\n        return this.renderLoaderView()\n      case apiStatusKeys.success:\n        return this.renderStatesCovidInformation()\n      case apiStatusKeys.failure:\n        return this.renderFailureCase()\n      default:\n        return null\n    }\n  }\n}\n\nexport default SearchCovidCasesByIndividualStates\n","import {Switch, Route} from 'react-router-dom'\n\nimport Home from './components/Home'\nimport About from './components/About'\nimport NotFound from './components/NotFound'\nimport Header from './components/Header'\nimport Vaccination from './components/Vaccination'\nimport SearchCovidCasesByIndividualStates from './components/SearchCovidCasesByIndividualStates'\nimport './App.css'\n\nconst App = () => (\n  <div className=\"corona_main_page\">\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n\n      <Route\n        exact\n        path=\"/state/:stateCode\"\n        component={SearchCovidCasesByIndividualStates}\n      />\n      <Route exact path=\"/vaccination\" component={Vaccination} />\n      <Route exact path=\"/about\" component={About} />\n      <Route component={NotFound} />\n    </Switch>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport {BrowserRouter} from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}